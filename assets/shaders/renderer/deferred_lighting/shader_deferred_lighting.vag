#version 330 core
layout (location=0) in vec3 aPos;
layout (location=1) in vec3 position;
layout (location=2) in vec3 colour;
layout (location=3) in vec3 attenuation;
layout (location=4) in mat4 modelMatrix;

out vec3 lightPosition;
out vec3 lightColour;
out vec3 lightAttenuation;

uniform mat4 view;
uniform mat4 projection;

void main()
{
	lightPosition=vec3(view*vec4(aPos,1));
	lightColour=colour;
	lightAttenuation=attenuation;

	gl_Position=projection*view*modelMatrix*vec4(aPos,1);
}
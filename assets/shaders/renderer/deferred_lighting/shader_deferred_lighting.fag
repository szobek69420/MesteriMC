#version 330 core

out vec4 fragColor;

in vec3 lightPosition;
in vec3 lightColour;
in vec3 lightAttenuation;

uniform sampler2D texture_normal;
uniform sampler2D texture_albedospec;
uniform sampler2D texture_shadow;
uniform sampler2D texture_depth;
uniform sampler2D texture_ssao;

uniform mat4 projection_inverse;

uniform float onePerScreenWidth;
uniform float onePerScreenHeight;

uniform float fogStart;
uniform float fogEnd;
uniform float fogHelper;//1/(fogEnd-fogStart)

void main()
{
	vec2 uv=vec2(gl_FragCoord.x*onePerScreenWidth, gl_FragCoord.y*onePerScreenHeight);
	float depth=texture(texture_depth, uv).r;//getting depth buffer info
	vec4 pos = projection_inverse * (vec4(uv, depth, 1)* 2 - 1);
	vec3 viewspace_position = pos.xyz / pos.w;
    vec3 view_dir = normalize(-viewspace_position); //(view_pos-frag_pos), but view_pos is (0, 0, 0) in view space
	
	vec3 normal = texture(texture_normal, uv).rgb * 2 - 1;
	vec3 albedo = texture(texture_albedospec, uv).rgb;
    vec3 diffuse = texture(texture_albedospec, uv).rgb;
	float specular = texture(texture_albedospec, uv).a;
    float ambientOcclusion = texture(texture_ssao, uv).r;
	
	// attenuation
	float distance = length(lightPosition - viewspace_position);
	float attenuation = lightAttenuation.x / (1 + lightAttenuation.y * distance + lightAttenuation.z * distance * distance);

	vec3 lighting = albedo * 0.1*attenuation;
	
	// ambient
	vec3 amb = vec3(0.3 * diffuse * ambientOcclusion);

	// albedo
	vec3 light_dir;
	if(lightAttenuation.y<0.00001&&lightAttenuation.z<0.00001)//directional
		light_dir=lightPosition;
	else
		light_dir=normalize(lightPosition - viewspace_position);
	vec3 alb = max(dot(normal, light_dir), 0.0) * albedo * lightColour;

	// specular
	vec3 halfway_dir = normalize(light_dir + view_dir);  
	float sp = pow(max(dot(normal, halfway_dir), 0.0), 16.0);
	vec3 spec = lightColour * sp * specular;
	
	alb *= attenuation;
	spec *= attenuation;
	lighting += amb + alb + spec;

	float alpha=1;
	float distanceFromEye=length(viewspace_position);
	if(distanceFromEye>fogStart)
		alpha=(fogEnd-distanceFromEye)*fogHelper;
	if(alpha<0)
		alpha=0;

	fragColor = vec4(lighting,alpha);

	//if (ambientOcclusion < 0.001)
	//	fragColor = vec4(1.0, 0.0, 1.0, 1.0);

	//fragColor=vec4(depth, depth, depth,1);
	//fragColor = vec4(normal, 1.0);
	//fragColor=vec4(0.005*viewspace_position+0.5,1);
}